{"version":3,"sources":["components/header/index.js","components/CountryCard/index.js","components/Filter/index.js","components/Search/index.js","api/requestHelper/index.js","api/index.js","pages/AllCountries/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","toggleTheme","isDark","className","onClick","title","icon","faSun","faMoon","CountryCard","props","item","flag","name","population","capital","region","src","alt","to","Filter","isDisabled","onChangeHandler","disabled","options","labelKey","value","placeholder","onChange","e","selectedValue","length","Search","state","timeOutID","setValue","setState","clearTimeout","setTimeout","onSubmitHandler","this","htmlFor","faSearch","id","type","target","React","Component","axiosInstance","axios","create","baseURL","process","get","url","config","getCountriesByName","countryName","getCountriesByRegion","AllCountries","isLoading","hasError","countries","regionFilter","searchQuery","pageSize","currentLoadedItems","filterByRegion","a","response","data","filterByName","handleDataChange","getCountries","renderBody","role","renderCountries","loadMore","prevState","slice","map","index","hasMore","App","isDarkTheme","toggleThemeHandler","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb2433b0.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faMoon } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nfunction Header({ toggleTheme, isDark }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__title\">Where in the world?</div>\r\n        <div className=\"header__theme-toggle\">\r\n          <button\r\n            className=\"header__theme-btn btn\"\r\n            onClick={toggleTheme}\r\n            title=\"Turn on\"\r\n          >\r\n            <FontAwesomeIcon\r\n              className=\"header__theme-icon\"\r\n              icon={isDark ? faSun : faMoon}\r\n            />\r\n            {isDark ? \"Light Mode\" : \"Dark Mode\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./styles.scss\";\r\n\r\nfunction CountryCard(props) {\r\n  const { item } = props;\r\n  const { flag, name, population, capital, region } = item;\r\n  return (\r\n    <article className=\"country-card card shadow-sm \">\r\n      <img src={flag} className=\"card-img-top country-card__flag\" alt={name} />\r\n      <div className=\"country-card__body\">\r\n        <Link to={`details/${name}`}  className =\"country-card__title font--bold\">\r\n          <p >{name}</p>\r\n        </Link>\r\n        <div className=\"country-card__info\">\r\n          <span className=\"font--regular\">Population:</span>\r\n          <span className=\"font--light\"> {population}</span>\r\n        </div>\r\n        <div className=\"country-card__info\">\r\n          <span className=\"font--regular\">Region:</span>\r\n          <span className=\"font--light\"> {region}</span>\r\n        </div>\r\n        <div className=\"country-card__info\">\r\n          <span className=\"font--regular\">Capital:</span>\r\n          <span className=\"font--light\"> {capital}</span>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default CountryCard;\r\n","import BootstrapSelect from \"react-bootstrap-select-dropdown\";\r\n\r\nimport \"./styles.scss\"\r\n\r\nfunction Filter(props) {\r\n  const { isDisabled, onChangeHandler } = props;\r\n  const data = [\r\n    { labelKey: \"Africa\", value: \"Africa\" },\r\n    { labelKey: \"Americas\", value: \"Americas\" },\r\n    { labelKey: \"Asia\", value: \"Asia\" },\r\n    { labelKey: \"Europe\", value: \"Europe\" },\r\n    { labelKey: \"Oceania\", value: \"Oceania\" },\r\n  ];\r\n  return (\r\n    <BootstrapSelect\r\n      className=\"filter-select shadow-lg\"\r\n      disabled={isDisabled}\r\n      options={data}\r\n      placeholder=\"Filter by Region\"\r\n      onChange={(e) =>\r\n        e.selectedValue.length && onChangeHandler(e.selectedValue[0])\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./styles.scss\";\r\nclass Search extends React.Component {\r\n  state = { value: \"\" };\r\n  timeOutID = null;\r\n  setValue = (value) => {\r\n    this.setState({ value }, () => {\r\n      \r\n        this.timeOutID && clearTimeout(this.timeOutID);\r\n        this.timeOutID = setTimeout(\r\n          () => this.props.onChangeHandler(value),\r\n          500\r\n        );\r\n      \r\n    });\r\n  };\r\n\r\n  onSubmitHandler = () => {\r\n    this.props.onChangeHandler(this.state.value);\r\n  };\r\n\r\n  render() {\r\n    const { isDisabled } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className=\"country-search \">\r\n        <label htmlFor=\"country-search-input\">\r\n          <span className=\"sr-only\">Search for a country</span>\r\n        </label>\r\n\r\n        <FontAwesomeIcon className=\"country-search__icon\" icon={faSearch} />\r\n        <input\r\n          disabled={isDisabled}\r\n          id=\"country-search-input\"\r\n          type=\"text\"\r\n          value={value}\r\n          placeholder=\"Search for a country...\"\r\n          className=\"form-control form-control-sm country-search__input shadow-lg\"\r\n          onChange={(e) => this.setValue(e.target.value)}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\nexport function get(url ,config) {\r\n  \r\n  return axiosInstance.get(url,config);\r\n}\r\n","import { get } from \"./requestHelper\";\r\nexport function getCountriesList() {\r\n  const getAllCountriesApi = process.env.REACT_APP_API_GET_LIST;\r\n  return get(getAllCountriesApi);\r\n}\r\n\r\nexport function getCountryDetails(countryName) {\r\n  const getCountryApi = `${process.env.REACT_APP_API_GET_COUNTRIES_BY_NAME}${countryName}`;\r\n  return get(getCountryApi, {\r\n    params: {\r\n      fullName: true,\r\n    },\r\n  });\r\n}\r\n\r\nexport function getCountriesByName(countryName) {\r\n  const getCountriesApi = `${process.env.REACT_APP_API_GET_COUNTRIES_BY_NAME}${countryName}`;\r\n  return get(getCountriesApi);\r\n}\r\n\r\nexport function getCountriesByRegion(region) {\r\n  const getCountriesApi = `${process.env.REACT_APP_API_GET_COUNTRIES_BY_REGION}${region}`;\r\n  return get(getCountriesApi);\r\n}\r\n","import React from \"react\";\r\n\r\nimport CountryCard from \"../../components/CountryCard\";\r\nimport Filter from \"../../components/Filter\";\r\nimport Search from \"../../components/Search\";\r\n\r\nimport {\r\n  getCountriesByName,\r\n  getCountriesByRegion,\r\n  getCountriesList,\r\n} from \"../../api\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nclass AllCountries extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    hasError: false,\r\n    countries: [],\r\n    regionFilter: null,\r\n    searchQuery: null,\r\n    pageSize: 8,\r\n    currentLoadedItems: 0,\r\n  };\r\n  componentDidMount() {\r\n    this.getCountries();\r\n  }\r\n\r\n  async getCountries() {\r\n    try {\r\n      const response = await getCountriesList();\r\n      this.setState({\r\n        isLoading: false,\r\n        countries: response.data,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        hasError: true,\r\n        isLoading: false,\r\n        countries: [],\r\n        regionFilter: null,\r\n        searchQuery: null,\r\n      });\r\n    }\r\n  }\r\n\r\n  filterByRegion = async (value) => {\r\n    try {\r\n      const response = await getCountriesByRegion(value);\r\n      this.setState({\r\n        isLoading: false,\r\n        countries: response.data,\r\n        regionFilter: value,\r\n        searchQuery: null,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        hasError: true,\r\n        isLoading: false,\r\n        countries: [],\r\n        regionFilter: null,\r\n        searchQuery: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterByName = async (value) => {\r\n    try {\r\n      const name = value;\r\n      const response = await getCountriesByName(name);\r\n      this.setState({\r\n        isLoading: false,\r\n        countries: response.data,\r\n        regionFilter: null,\r\n        searchQuery: value,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        hasError: true,\r\n        isLoading: false,\r\n        countries: [],\r\n        regionFilter: null,\r\n        searchQuery: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDataChange = (value, src) => {\r\n    this.setState(\r\n      { isLoading: true, countries: [], currentLoadedItems: 0 },\r\n      () => {\r\n        if(!value){\r\n          this.getCountries();\r\n          return;\r\n        }\r\n        if (src === \"filter\") {\r\n          this.filterByRegion(value);\r\n        } else {\r\n          this.filterByName(value);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  renderBody = () => {\r\n    const { countries, isLoading, hasError } = this.state;\r\n    if (isLoading) {\r\n      return (\r\n        <div className=\"alt-state\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (countries.length) {\r\n      return this.renderCountries();\r\n    }\r\n\r\n    if (hasError) {\r\n      return <div className=\"alt-state\">Something went wrong</div>;\r\n    }\r\n\r\n    if (!countries.length && !isLoading) {\r\n      return <div className=\"alt-state\">No countries found</div>;\r\n    }\r\n  };\r\n  \r\n  loadMore = () => {\r\n    this.setState((prevState) => ({\r\n      currentLoadedItems: prevState.currentLoadedItems + prevState.pageSize,\r\n    }));\r\n  };\r\n\r\n  renderCountries = () => {\r\n    const { countries, pageSize, currentLoadedItems } = this.state;\r\n    const countriesToLoad = countries.slice(0, currentLoadedItems + pageSize);\r\n\r\n    const cards = countriesToLoad.map((item, index) => {\r\n      return (\r\n        <div className=\"col-md-3 col-sm-4 col-12\" key={`${index}-${item.name}`}>\r\n          <CountryCard item={item} />\r\n        </div>\r\n      );\r\n    });\r\n    return cards;\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, countries, pageSize } = this.state;\r\n    const hasMore = countries.length > pageSize;\r\n\r\n    return (\r\n      <section className=\"countries-list container\">\r\n        <div className=\"row countries-list__header \">\r\n          <div className=\"countries-list__search col-md-4 col-12\">\r\n            <Search\r\n              isDisabled={isLoading}\r\n              onChangeHandler={(value) =>\r\n                this.handleDataChange(value, \"search\")\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"countries-list__filter col-md-3 col-12\">\r\n            <Filter\r\n              isDisabled={isLoading}\r\n              onChangeHandler={(value) =>\r\n                this.handleDataChange(value, \"filter\")\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row g-lg-5 g-md-4 g-1\">{this.renderBody()}</div>\r\n        {hasMore && (\r\n          <div className=\"row g-lg-5 g-md-4 g-1\">\r\n            <div className=\"col-12 countries-list__load-more\">\r\n              <button className=\"btn main-btn shadow-sm\" onClick={this.loadMore}>\r\n                Load More\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllCountries;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/header\";\n\nimport \"./App.scss\";\nimport AllCountries from \"./pages/AllCountries\";\n\nclass App extends React.Component {\n  state = {\n    isDarkTheme: false,\n  };\n\n  toggleThemeHandler = () => {\n    this.setState((prevState) => ({\n      isDarkTheme: !prevState.isDarkTheme,\n    }));\n  };\n\n  render() {\n    const { isDarkTheme } = this.state;\n    return (\n      <Router>\n        <div className={`countries-app ${isDarkTheme ? \"dark-mode\" : \"\"}`}>\n          <Header isDark={isDarkTheme} toggleTheme={this.toggleThemeHandler} />\n          <Switch>\n            <Route exact path=\"/\">\n              <AllCountries />\n            </Route>\n            <Route exact path=\"/details/:name\">\n              {() => <div className=\"alt-state\">details</div>}\n            </Route>\n\n            <Route path=\"*\">\n              {() => <div className=\"alt-state\">not found</div>}\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}